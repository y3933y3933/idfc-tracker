// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: users.sql

package database

import (
	"context"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (name) VALUES (?)
`

func (q *Queries) CreateUser(ctx context.Context, name string) error {
	_, err := q.db.ExecContext(ctx, createUser, name)
	return err
}

const getUserByName = `-- name: GetUserByName :one
SELECT id, name 
FROM users 
WHERE name = ?
`

type GetUserByNameRow struct {
	ID   int64
	Name string
}

func (q *Queries) GetUserByName(ctx context.Context, name string) (GetUserByNameRow, error) {
	row := q.db.QueryRowContext(ctx, getUserByName, name)
	var i GetUserByNameRow
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
